<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "Screen-for-Unraid">
<!ENTITY author    "trulow">
<!ENTITY version   "2024.06.11"> <!-- Plugin Version -->
<!ENTITY launch    "Settings/&name;">
<!ENTITY pluginURL "https://raw.githubusercontent.com/trulow/&name;/main/plugin/&name;.plg">
<!ENTITY iconURL   "https://raw.githubusercontent.com/trulow/Screen-for-Unraid/main/icon.png">
<!ENTITY minUnraidVersion "6.3.3"> <!-- Minimum Unraid Version -->
<!ENTITY supportURL "https://forums.unraid.net/topic/168065-screen-for-terminal-unraid/">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" min="&minUnraidVersion;" icon="&iconURL;" support="&supportURL;">

  <CHANGES>
##&name;
###2024.06.11
- Initial release to install screen-4.9.0-x86_64-1
  </CHANGES>

  <!-- The 'pre-install' script. -->
  <FILE Run="/bin/bash">
    <INLINE>
      <![CDATA[
#!/bin/bash

# Check Unraid version
version=$(awk -F'=' '/version/ {print $2}' /etc/unraid-version)
if [[ "$(echo "${version}" | tr -d '.')" -lt "$(echo "${minUnraidVersion}" | tr -d '.')" ]]; then
  echo "**********************************************************************"
  echo ""
  echo "ScreenInstaller Requires Unraid version ${minUnraidVersion} or greater to run"
  echo ""
  echo "**********************************************************************"
  exit 1
fi

# Check current plugin version
pluginVersion=$(plugin version /boot/config/plugins/&name;/&name;.plg)
if [[ "${pluginVersion}" && "$(echo "${pluginVersion}" | tr -d '.')" -ge "$(echo "${version}" | tr -d '.')" ]]; then
  echo "The installed version (${pluginVersion}) is up to date."
  exit 0
fi

# Download and install screen package
baseURL="https://github.com/trulow/Screen-for-Unraid/releases/download/"
screenVersion="4.9.0"
screenPackage="screen-${screenVersion}-x86_64-1.txz"
screenURL="${baseURL}${screenVersion}/${screenPackage}"

# Download the package
curl -L -o "/boot/config/plugins/&name;/${screenPackage}" "${screenURL}"

# Verify MD5 checksum
expectedMD5=$(curl -s "${screenURL}.md5")
actualMD5=$(md5sum "/boot/config/plugins/&name;/${screenPackage}" | awk '{print $1}')
if [[ "${expectedMD5}" != "${actualMD5}" ]]; then
  echo "MD5 checksum verification failed for ${screenPackage}"
  exit 1
fi

echo "Screen package ${screenPackage} downloaded and verified."
exit 0
      ]]>
    </INLINE>
  </FILE>

  <!-- The 'install' script. -->
  <FILE Run="/bin/bash" Method="install">
    <INLINE>
echo ""
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo ""
echo " Copyright 2024, &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
    </INLINE>
  </FILE>

  <!-- The 'remove' script. -->
  <FILE Run="/bin/bash" Method="remove">
    <INLINE>
removepkg "/boot/config/plugins/&name;/screen-4.9.0-x86_64-1.txz"
rm -rf "/usr/local/emhttp/plugins/&name;"
rm -f "/boot/config/plugins/&name;/screen-4.9.0-x86_64-1.txz"

removepkg "/boot/extra/*_screeninstaller.txz" 1>/dev/null
rm -f "/boot/extra/*_screeninstaller.txz" 1>/dev/null
rm -f "/boot/config/plugins/ScreenInstaller" 1>/dev/null

echo ""
echo "-----------------------------------------------------------"
echo " &name; has been removed."
echo " Copyright 2024, &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
    </INLINE>
  </FILE>

</PLUGIN>
